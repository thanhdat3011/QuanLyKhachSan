<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="frmDSDATPHONG.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAABO9JREFUeF7tnE9olEcYh3cFEy3tsQeLB09eSvXgwULBWsSK2FY92B6kHttTD26s
        J7WgRHsSlEI0QqF4lgTZSKDqJt1Ia1ui2NgIEQ+anOp/RBtSO/2meb+4efeXncnufC+7O+8DD0Kn1d88
        k5jYQnOKoiiKoiiKoiiKolSycWdx24YdA5Pv7xwwMbthR/Fe0mErZZHD/sJoUJwW71IWOfCQeKUscqAR
        MUtZ5EAjYpayyIFGxCxlkQONiFnKIgcaEbOURQ40ImYpixxoRMxSFjl+vDNj1FdSFjnQiJilLHKgETFL
        WeRAI2KWssiBRsQsZZEDjYhZyiIHGhGzlEUONCJmKYscaETMUhY50IiYpSxyoBE+rth/Y56uc2n5Hl8p
        ixxohI+uC/NzafkeXymLHGiEj64L83Np+R5fKYscaISPrgvzc2n5Hl8pixxoRMxSFjnQiJilLHKgETFL
        WeRAI2KWssiBRvjo+qLHz6Xle3ylLHKgET66LszPpeV7fKUscqARProuzM+l5Xt8pSxyoBE+ui7Mz6Xl
        e3ylLHKgETFLWeRAI2KWssiBRsQsZcnd27v3g6lC4Vbiw8murgPJQZ6OwoJGxKxtMrVv34dJ+BdTXV0m
        NXmEU5k8Ahrho+uLHj+Xlu/xFcXP9BHQCB9dF+bn0vI9Pg6O/WXGu49dQ/FTJwuFE0EfAQ3x0XVhfi4t
        3+Ny8OZ901/62fRfKj8ZP3psDMVPDfqZgMb46LowP5eW76nlXPzLV2aVfAQ0KCar4s9/hJsofqr97ogy
        1g8aFYulGxM4fuqlkce3umt+JjygjPWDhsXg6G8XzMszr5nhUj+On1rjMyH5DBinjPWDxrW7/8fvXWbM
        qVzikvoeIflW1f5hjTLWDxroo+uLHj+Xlu9JnR8/1fsRZn87KhSmk29HP6KEjYFG+ui6MD+XdPWhP6v2
        WHH8xT7Ct6PJbz0fU77GQUN95Jd2nUtp43//+7OqPbXjpyaPMNBbhvET+y5f+fv8xXLY/6MKH+orv7jr
        XMLG4pM9+X+Hiz1D1Q8wMt13sRzuIz+Fj203FxU/teoRMopvQaPbxbrip849QobxLWh4Ozj6a7H++HPm
        n189372JUmUDGt/qNvSRn9qTm05+zO4jPwVdwEf+BdB1HtogX3AXUiq+hV/AVx7EdR7Stolv4ZfwlUdx
        nYcyy/gvT3fYH+XiW/hFfOVhXOchzDr+9at9hrLIwS/TaoaMb38+yiIHv1ArGTq+lbLIUXmhVjKL+FbK
        IkflL94qZhXfSlnk4AOa3SzjWymLHGhEs5p1fCtlkQONaEYl4lspixxoRLMpFd9KWeRAI5pJyfhWyiIH
        GtEsSse3UhY50Ihm8KeJu+bpubUwqq/28ex/F0A//0JSFjnQiGbwj7GzZqb8pnl27m0Y1+ViP/JTKYti
        hjrOmOFOk/jEnM2PocgLKv2vlNsRM9xxmx5gcY+g8RvHlJavrIjv/wgaPwymtOxz8AC1H0Hjh+P4gbW/
        PBp8HT2AtfoRNH5YPtm1Zeaz3ZvM/QtvoAewvnoEjR+W7w6uWb9+y3ZjdT7CD/nrGj8wh79e15s+AH6E
        jonZb1GX7jYjy9+if0wJxVdfvjdR+QDbP938z8lDa66Zoc4vTKlzFf1tSlbs2bPxkX2EI/vXnT7xzTvv
        0l9WFEVRFEVRFEVpEXK5/wA/lHmsQrcb6wAAAABJRU5ErkJggg==
</value>
  </data>
</root>